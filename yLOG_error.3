.TH yLOG_error· 3 2008-jul "linux" "interfacing with full library version"

.SH NAME
yLOG \- simple, consistent, and useful process execution debugging

.SH PATRON (see HERITAGE at bottom for more)
clio-chrysafenios (flowering) greek muse of written and oral history

.SH IMAGERY
golden young woman holding a scroll, by a chest full of books

.SH SUMMARY (see yLOG (7) for more information)
yLOG and yLOG_uver allow standardized, structured, and configurable process
execution logging that helps me quickly understand program flow, isolate and
diagnose issues, and therefore, much more quickly fix trouble.

.SH SERIOUS FOREWARNING
i am a crazy, selfish, dog-fooding c-programmer.  my code tends to be
experimental and constantly evolving.  my point is NOT to be the best, it is
to challenge myself, build from scratch, and allow fast problem solving.

.SH DOCUMENTATION
.nf
yLOG (3)           interfacing with yLOG in general
yLOG_long (3)      interfacing with full library, long version
yLOG_short (3)     interfacing with full library, short version
.B yLOG_error (3)´´´´´interfacing with full library, error reporting
yLOG_spec (3)      interfacing with full library, specialty
yLOG_vol (3)       interfacing with full library, volume control
yLOG_unit (3)      interfacing with full library, unit testing
yLOG_uver (3)      interfacing with micro, code-inclusion version
yLOG (6)           interactive usage and navigation of log files
yLOG (7)           decision rationale, scope, and objectives

.SH TABLE OF CONTENTS
.nf  
a) overview        quick summary
b) synopsis        function overview
c) errors          helpers to insert warnings in log
d) signal          aids in sending signal data to log

.SH A) OVERVIEW
yLOG has the ability to log error messages to make them stand out.  it also
allows programmers to later tell exactly when it was generated.

.SH B) SYNOPSIS
.nf
·  char     yLOG_warn     (char* <msg>);
·  char     yLOG_error    (char* <msg>);
·  char     yLOG_fatal    (char* <msg>);
·  char     yLOG_signal   (int   <signo>);

.SH C) ERRORS
these four functions support error messages to logger

.SS char  yLOG_warn (<message>)
send a warning to log

.SS char  yLOG_error (<message>)
send a recoverable error to log

.SS char  yLOG_fatal (<message>)
send a fatal error to log

.SH D) SIGNAL
handles a specialized log for signals received by a program.

.SS char  yLOG_signal (<int>)
explains the signal received, with name and concern

.SH BUGS
it is incredibly stable for me, but if anyone else used it it might explode
and take the universe with it.

.SH COLOPHON
this page is part of a documentation package meant to make the use of the
heatherly tools easier and faster
